a = a0[1]
b = b0[1]
dbinom (y, n, invlogit(a+b*x), log.p=TRUE)
invlogit(a+b*x)
?dbinom
sum(invlogit(a+b*x))
dbinom(y, n, invlogit(a+b*x))
dbinom(y[1], n[1], invlogit(a+b*x[1]))
dbinom(y[1], n[1], invlogit(a+b*x[1]), log.p = T)
log_post <- function (a,b,y,n,x) sum (dbinom (y, n, invlogit(a+b*x), log=TRUE))
log_post <- function (a,b,y,n,x) sum (dbinom (y, n, invlogit(a+b*x), log=TRUE))
dbinom (y, n, invlogit(a+b*x), log=TRUE)
grid.points <- expand.grid(a0, b0)
post.ord <- apply(grid.points, MARGIN = 1, FUN = log_post, y = y, n = n, x = x)
head(grid.points)
log_post <- function (a,b,y,n,x) exp^(sum (dbinom (y, n, invlogit(a+b*x), log=TRUE)))
post.ord <- apply(grid.points, MARGIN = 1, function(grid) log_post(grid[1], grid[2], y = y, n = n, x = x)
)
log_post <- function (a,b,y,n,x) exp^(sum (dbinom (y, n, invlogit(a+b*x), log=TRUE)))
post.ord <- apply(grid.points, 1, function(grid) log_post(grid[1], grid[2], y = y, n = n, x = x))
head(grid.points)
post.ord <- apply(grid.points, 1, function(t) log_post(a = t[1], b = t[2], y = y, n = n, x = x))
log_post <- function (a,b,y,n,x) {
loglik = sum (dbinom (y, n, invlogit(a+b*x), log=TRUE))
return(exp^(loglik))
}
log_post <- function (a,b,y,n,x) {
loglik = sum (dbinom (y, n, invlogit(a+b*x), log=TRUE))
return(exp(loglik))
}
post.ord <- apply(grid.points, 1, function(t) log_post(a = t[1], b = t[2], y = y, n = n, x = x))
post.ord
filled.contour(grid.points, post.ord)
filled.contour(grid.points, z = post.ord)
filled.contour(x = grid.points[, 1], y = grid.points[, 2], z = post.ord)
head(grid.points)
tail(grid.points)
filled.contour(x = grid.points$Var1, y = grid.points$Var2, z = post.ord)
?filled.contour
hist(post.ord)
sample.indices <- sample(1:nrow(grid.points), size = 10000, replace = T, prob = post.ord)
sim.posterior <- grid.points[sample.indices, ]
hist(sim.posterior[, 1])
hist(sim.posterior[, 2])
contour(x = grid.points$Var1, y = grid.points$Var2, z = post.ord)
grid.points$Var1
image.maker <- function(coords, value){
N <- length(unique(coords[,1]))
image.out <- matrix(NA, nrow = N, ncol = N)
coords[,1] <- as.numeric(factor(coords[,1]))
coords[,2] <- as.numeric(factor(coords[,2]))
for (i in 1:nrow(coords))
image.out[coords[i,1], coords[i,2]] <- value[i]
return(image.out)
}
image.maker(grid.points, post.ord)
for (t1 in a0) {
for (t2 in b0) {
log_post(a = t1, b = t2, y = y, n = n, x = x)
}
}
post.ord <- NULL
for (t1 in a0) {
for (t2 in b0) {
post0 = log_post(a = t1, b = t2, y = y, n = n, x = x)
post.ord = c(post.ord, post0)
}
}
post.ord <- NULL
for (t1 in a0) {
for (t2 in b0) {
post0 = log_post(a = t1, b = t2, y = y, n = n, x = x)
post.ord = rbind(post.ord, c(t1, t2, post0))
}
}
dim(post.ord)
sample.indices <- sample(1:nrow(post.ord), size = 10000, replace = T, prob = post.ord[, 3])
head(sample.indices)
sim.posterior <- post.ord[sample.indices, ]
hist(sim.posterior[, 1])
hist(sim.posterior[, 2])
contour(post.ord)
head(post.ord)
head(post.ord)
contour(x = post.ord[, 1], y = post.ord[, 2], z = post.ord[, 3])
library(ape)
library(amap)
library(dplyr)
library(xlsx)
library(Biobase)
library(biomaRt)
library(ggplot2)
library(ggvis)
library(VennDiagram)
library(pheatmap)
library(contrast)
library(igraph)
library(dplyr)
library(ggplot2)
library(pheatmap)
library(biomaRt)
library(snpStats)
rm(list = ls())
setwd("~/Dropbox/GitHub/Adsp")
load("data/glmList.rdt"); list <- glmList
for(obj in names(list)) assign(obj, list[[obj]])
gwasAdd = gwas
load("data/glmList_epis_Apoe2.rdt"); list <- glmList
for(obj in names(list)) assign(obj, list[[obj]])
gwasApoe2 = gwas
load("data/glmList_epis_Apoe4.rdt"); list <- glmList
for(obj in names(list)) assign(obj, list[[obj]])
gwasApoe4 = gwas
head(gwas)
gwasAdd[gwasAdd$UID == var, ]
var <- "10-120789413" # NANOS1
gwasAdd[gwasAdd$UID == var, ]
gwasApoe4[gwasApoe4$UID == var, ]
var <- "19-4538599" # LRG1
gwasAdd[gwasAdd$UID == var, ]
gwasApoe2[gwasApoe2$UID == var, ]
load("data/ge.rdt")
rm(list = ls())
setwd("~/Dropbox/GitHub/Load/")
load("data/ge.rdt")
ge0 <- sapply(ge, function(x) x$TPM) %>% as.data.frame
rownames(ge0) <- ge[[1]]$gene_id
ge0 <- ge0[apply(ge0, 1, function(x) max(x) > 10 & sum(x > 0) > 2), ]
colnames(ge0) <- gsub("Bin-1", "Bin1", colnames(ge0))
grp1 <- c("ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
grp2 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
mart <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
martId <- getBM(c("ensembl_gene_id", "external_gene_name"), "ensembl_gene_id", rownames(ge0), mart)
ge0 <- apply(ge0[martId[, "ensembl_gene_id"], ], 2, function(x) tapply(x, martId[, 2], sum)) %>% as.data.frame
head(ge0)
colSums(ge0)
tpmAll = ge0
save(tpmAll, file = "data/tpmAll.rdt")
rm(list = ls())
setwd("~/Dropbox/GitHub/Load/")
load("data/tpmAll.rdt")
names(tpmAll)
grp1 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
grp2 <- factor(gsub("-.*", "", names(tpmAll)), levels = grp1)
grp2
length(grp2)
head(melt(t(tpmAll)),)
library(reshape)
head(melt(t(tpmAll)),)
mutate(melt(t(tpmAll)), group = gsub("-.*", "", X1)) %>%
ggplot(aes(X1,value,color=group)) + geom_boxplot() + xlab("") +
theme(axis.text.x=element_text(angle=90))
tpmAll[rowMax(tpmAll) > 1e4, ] %>% rownames  # outlier
tpmAll[rowMean(tpmAll) > 1e4, ] %>% rownames  # outlier
?rowMean
??rowMean
library(Biobase)
tpmAll[rowMean(tpmAll) > 1e4, ] %>% rownames  # outlier
tpmAll[rowMax(tpmAll) > 1e4, ] %>% rownames  # outlier
rowMean
rowMean()
tpmAll[rowMax(as.matrix(tpmAll)) > 1e4, ] %>% rownames  # outlier
tpm <- tpmAll[! rowMax(as.matrix(tpmAll)) > 1e4, ]  # outlier
colSums(tpm)
rm(tpm)
?rowttest
??rowttest
library(genefilter)
tpmAll[rowMax(tpmAll) > 1e4, ] %>% rownames  # outlier
?rowttest
?rowttests
mutate(melt(t(log2(tpmAll + 1))), group = gsub("-.*", "", X1)) %>%
ggplot(aes(X1,value,color=group)) + geom_boxplot() + xlab("") +
theme(axis.text.x=element_text(angle=90))
tpmAll_remove = with(tpmAll, Bin-6962 = NULL)
tpmAll_remove = with(tpmAll, "Bin-6962" = NULL)
?with
names(tpmAll)
tpmAll_remove = with(tpmAll, "Bin1-6962" = NULL)
tpmAll_remove = with(tpmAll, Bin1-6962 = NULL)
tpmAll_remove = with(tpmAll, "Bin1-6962" <- NULL)
tpmAll_remove = within(tpmAll, "Bin1-6962" <- NULL)
Bin1 = tpmAll[grep("^B", names(tpmAll))]
head(Bin1)
geno = factor(gsub("-.*", "", names(Bin1)), levels = c("B6", "Bin1"))
geno
Bin1_remove = within(Bin1, "Bin1-6962" <- NULL)
ttest = rowttests(Bin1, geno)
ttest = rowttests(as.matrix(Bin1), geno)
head(ttest)
geno_remove = factor(gsub("-.*", "", names(Bin1_remove)), levels = c("B6", "Bin1"))
ttest_remove = rowttests(as.matrix(Bin1_remove), geno)
ttest_remove = rowttests(as.matrix(Bin1_remove), geno_remove)
sum(ttest$p.value)
ttest$p.value
sum(ttest$p.value < 0.05)
ttest$p.value < 0.05
sums(ttest$p.value < 0.05)
sum(ttest$p.value < 0.05)
sum(ttest$p.value < 0.05)
is.na(ttest$p.value)
table(is.na(ttest$p.value))
which(is.na(ttest$p.value))
Bin1[11311, ]
library(xlsx)
library(reshape)
library(genefilter)
library(dplyr)
rm(list = ls())
setwd("~/Dropbox/GitHub/Load/")
load("data/tpmAll.rdt")
Bin1 = tpmAll[grep("^B", names(tpmAll))]
Bin1 = Bin1[rowMax(Bin1) > 5, ]
Bin1 = Bin1[rowMax(asmatrix(Bin1)) > 5, ]
Bin1 = Bin1[rowMax(as.matrix(Bin1)) > 5, ]
geno = factor(gsub("-.*", "", names(Bin1)), levels = c("B6", "Bin1"))
Bin1_remove = within(Bin1, "Bin1-6962" <- NULL)
geno_remove = factor(gsub("-.*", "", names(Bin1_remove)), levels = c("B6", "Bin1"))
head(Bin1)
Bin1["Bin1", ]
melt(Bin1["Bin1", ])
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable)
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable))
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable))
gene = "Bin1"
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable))
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable)) %>%
ggplot(aes(group, value, label = variable)) + geom_boxplot(width = 0.5) +
theme_bw() + xlab("") + ylab("") + ggtitle(x) + geom_text(size = 2)
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable)) %>%
ggplot(aes(group, value, label = variable)) + geom_boxplot(width = 0.5) +
theme_bw() + xlab("") + ylab("") + geom_text(size = 2)
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable)) %>%
ggplot(aes(group, value, label = variable)) + geom_boxplot(width = 0.5) +
theme_bw() + xlab("") + ylab("") + geom_text()
Bin1_remove = within(Bin1, "Bin1-6962" <- NULL)
geno_remove = factor(gsub("-.*", "", names(Bin1_remove)), levels = c("B6", "Bin1"))
ttest = rowttests(as.matrix(Bin1), geno)
ttest_remove = rowttests(as.matrix(Bin1_remove), geno_remove)
sum(ttest$p.value < 0.05)
sum(ttest_remove$p.value < 0.05)
report_1 = read.xlsx("data/Bin1.xlsx", sheetIndex = 1)
names(report_1)
head(report_1)
report_1$symbol
option(stringsAsFactors = F)
options(stringsAsFactors = F)
report_1 = read.xlsx("data/Bin1.xlsx", sheetIndex = 1)
report_1$symbol
names(which(ttest$p.value < 0.05))
head(ttest)
which(ttest$p.value < 0.05)
rownames(ttest)[ttest$p.value < 0.05]
listA = rownames(ttest)[ttest$p.value < 0.05]
listB = report_1$symbol
intersect(listA, listB)
?venn
?"VennDiagram"
library(ggplots)
library(ggplot2)
?venn
library(gplots)
?venn
venn(listA, listB)
venn(list(listA, listB))
rm(list = ls())
setwd("~/Dropbox/GitHub/Load/")
load("data/ge.rdt")
ge0 <- sapply(ge, function(x) x$TPM) %>% as.data.frame
rownames(ge0) <- ge[[1]]$gene_id
head(ge0)
colnames(ge0) <- gsub("Bin-1", "Bin1", colnames(ge0))
grp1 <- c("ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
grp2 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
mart <- useMart("ensembl", dataset = "mmusculus_gene_ensembl")
martId <- getBM(c("ensembl_gene_id", "external_gene_name"), "ensembl_gene_id", rownames(ge0), mart)
ge0 <- apply(ge0[martId[, "ensembl_gene_id"], ], 2, function(x) tapply(x, martId[, 2], sum)) %>% as.data.frame
head(ge0)
tpmAll = ge0
save(tpmAll, file = "data/tpmAll.rdt")
options(stringsAsFactors = F)
rm(list = ls())
setwd("~/Dropbox/GitHub/Load/")
load("data/tpmAll.rdt")
Bin1 = tpmAll[grep("^B", names(tpmAll))]
Bin1 = Bin1[rowMax(as.matrix(Bin1)) > 5, ]
geno = factor(gsub("-.*", "", names(Bin1)), levels = c("B6", "Bin1"))
gene = "Bin1"
mutate(melt(Bin1[gene, ]), group = gsub("-.*", "", variable)) %>%
ggplot(aes(group, value, label = variable)) + geom_boxplot(width = 0.5) +
theme_bw() + xlab("") + ylab("") + geom_text()
Bin1_remove = within(Bin1, "Bin1-6962" <- NULL)
geno_remove = factor(gsub("-.*", "", names(Bin1_remove)), levels = c("B6", "Bin1"))
ttest = rowttests(as.matrix(Bin1), geno)
ttest_remove = rowttests(as.matrix(Bin1_remove), geno_remove)
sum(ttest$p.value < 0.05)
listA = rownames(ttest)[ttest$p.value < 0.05]
sum(ttest_remove$p.value < 0.05)
listB = rownames(ttest_remove)[ttest_remove$p.value < 0.05]
report_1 = read.xlsx("data/Bin1.xlsx", sheetIndex = 1)
listC = report_1$symbol
venn(list(listA, listB, listC))
?venn
intersect(listA, listC)
venn(list(listA, listC))
Bin1[setdiff(listA, listB), ]
Bin1 = tpmAll[grep("^B", names(tpmAll))]
Bin1 = Bin1[rowMax(as.matrix(Bin1)) > 10, ]
geno = factor(gsub("-.*", "", names(Bin1)), levels = c("B6", "Bin1"))
Bin1_remove = within(Bin1, "Bin1-6962" <- NULL)
geno_remove = factor(gsub("-.*", "", names(Bin1_remove)), levels = c("B6", "Bin1"))
ttest = rowttests(as.matrix(Bin1), geno)
ttest_remove = rowttests(as.matrix(Bin1_remove), geno_remove)
sum(ttest$p.value < 0.05)
sum(ttest_remove$p.value < 0.05)
listA = rownames(ttest)[ttest$p.value < 0.05]
listB = rownames(ttest_remove)[ttest_remove$p.value < 0.05]
report_1 = read.xlsx("data/Bin1.xlsx", sheetIndex = 1)
listC = report_1$symbol
venn(list(listA, listC))
Bin1[setdiff(listA, listB), ]
ttest[setdiff(listA, listB), ]
Bin1[setdiff(listA, listC), ]
ttest[setdiff(listA, listC), ]
venn(list(listA, listC))
Bin1[setdiff(A = listA, C = listC), ]
venn(list(A = listA, C = listC))
report_2 = read.xlsx("data/vsB6.xlsx", sheetName = "Bin1")
head(report_2)
listD = report_2$symbol
venn(list(A = listB, C = listD))
venn(list(B = listB, D = listD))
ttest_remove[setdiff(listD, listB), ]
Bin1 = log2(Bin1 + 1)
Bin1 = tpmAll[grep("^B", names(tpmAll))]
Bin1 = Bin1[rowMax(as.matrix(Bin1)) > 10, ]
Bin1 = log2(Bin1 + 1)
geno = factor(gsub("-.*", "", names(Bin1)), levels = c("B6", "Bin1"))
Bin1_remove = within(Bin1, "Bin1-6962" <- NULL)
geno_remove = factor(gsub("-.*", "", names(Bin1_remove)), levels = c("B6", "Bin1"))
ttest = rowttests(as.matrix(Bin1), geno)
ttest_remove = rowttests(as.matrix(Bin1_remove), geno_remove)
sum(ttest$p.value < 0.05)
sum(ttest_remove$p.value < 0.05)
listA = rownames(ttest)[ttest$p.value < 0.05]
listB = rownames(ttest_remove)[ttest_remove$p.value < 0.05]
venn(list(A = listA, C = listC))
venn(list(B = listB, D = listD))
ttest_remove[setdiff(listD, listB), ]
grp2 <- factor(names(tpmAll), levels = grp1)
grp1 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
names(tpmAll)
tpmAll_remove = within(tpmAll, "Bin1-6962" <- NULL)
grp1 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
grp2 <- factor(names(tpmAll_remove), levels = grp1)
as.matrix(log2(tpmAll_remove) + 1)
as.matrix(log2(tpmAll_remove + 1))
ttest_remove[setdiff(listD, listB), ]
gene = "Ubr3"
y = as.matrix(log2(tpmAll_remove + 1))[gene, ]
y
lm(y ~ grp2)
grp2
names(tpmAll_remove)
grp2 <- factor(gsub("-.*", "", names(tpmAll_remove), levels = grp1)
)
grp1 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
grp2 <- factor(gsub("-.*", "", names(tpmAll_remove), levels = grp1))
grp2 <- factor(gsub("-.*", "", names(tpmAll_remove)), levels = grp1)
lm(y ~ grp2)
summary(lm(y ~ grp2))
ttest_remove[gene, ]
y = as.matrix(log2(tpmAll_remove + 1))
y = y[rowMax(y) > 10, ]
y = as.matrix(log2(tpmAll_remove + 1))
dim(y)
y = y[rowMax(y) > log2(10), ]
dim(y)
y = as.matrix(log2(tpmAll_remove + 1))
y = y[rowMax(y) > log2(10 + 1), ]
dim(y)
fit <- apply(y, 1, function (x) lm(x ~ grp2))
fit.pv <- sapply(fit, function(x) summary(x)$coefficients[-1, "Pr(>|t|)"]) %>% t
head(fit.pv)
head(y)
summary(lm(y[gene, ] ~ grp2))
head(ttest)
?join
inner_join(fit.pv, ttest_remove)
inner_join(as.data.frame(fit.pv), as.data.frame(ttest_remove))
inner_join(as.data.frame(fit.pv), as.data.frame(ttest_remove), by = row.names)
head(fit.pv)
head(ttest_remove)
gene_join = intersect(rownames(fit.pv), rownames(ttest_remove))
join = cbind(fit.pv[gene_join, ], ttest_remove[gene_join, ])
head(join)
join = intersect(rownames(fit.pv), rownames(ttest_remove))
join = cbind(fit.pv[join, ], ttest_remove[join, ])
join[gene, ]
lm(Bin1_remove[gene, ] ~ geno_remove)
lm(as.matrix(Bin1_remove)[gene, ] ~ geno_remove)
summary(lm(as.matrix(Bin1_remove)[gene, ] ~ geno_remove))
join[gene, ]
summary(lm(as.matrix(tpmAll_remove)[gene, ] ~ grp2))
grp2
summary(lm(as.matrix(Bin1_remove)[gene, ] ~ geno_remove))
head(Bin1)
head(Bin1_remove)
summary(lm(y[gene, ] ~ grp2))
summary(lm(y[gene, ] ~ grp2))
summary(lm(as.matrix(Bin1_remove)[gene, ] ~ geno_remove))
2^0/1
2^0.1
library(xlsx)
library(reshape)
library(gplots)
library(ggplot2)
library(genefilter)
library(dplyr)
options(stringsAsFactors = F)
rm(list = ls())
setwd("~/Dropbox/GitHub/Load/")
load("data/tpmAll.rdt")
tpmAll_remove = within(tpmAll, "Bin1-6962" <- NULL)
grp1 <- c("B6", "ApoE4", "Apoe", "Bin1", "Cd2ap", "Clu")
grp2 <- factor(gsub("-.*", "", names(tpmAll_remove)), levels = grp1)
grp2
tpmAll_remove = tpmAll_remove[rowMax(as.matrix(tpmAll_remove)) > 10, ]
y = as.matrix(log2(tpmAll_remove + 1))
y = as.matrix(log2(tpmAll_remove + 1))
hist(y[, 1])
fit <- apply(y, 1, function (x) lm(x ~ grp2))
fit.pv <- sapply(fit, function(x) summary(x)$coefficients[-1, "Pr(>|t|)"]) %>% t
fit.et <- sapply(fit, function(x) summary(x)$coefficients[-1, "Estimate"]) %>% t
head(fit.pv)
boxplot(y["0610007P14Rik", grp2])
boxplot(y["0610007P14Rik" ~ grp2])
boxplot(y["0610007P14Rik", ] grp2)
boxplot(y["0610007P14Rik", ], grp2)
grp2
boxplot(y["0610007P14Rik", ], group = grp2)
y["0610007P14Rik", ]
df = data.frame(value = y["0610007P14Rik", ], group = grp2)
ggplot2(df, aes(group, value)) + geom_boxplot()
ggplot(df, aes(group, value)) + geom_boxplot()
head(fit.pv)
rownames(fit.pv)[fit.pv[, "grp2Bin1"] < 0.05]
source("~/Dropbox/X/function.R")
geneList = rownames(fit.pv)[fit.pv[, "grp2Bin1"] < 0.05]
gk = mmGK(geneList)
gk$KEGG
fit.et <- sapply(fit, function(x) summary(x)$coefficients[-1, "Estimate"]) %>% t
fit.pv["Bin1", ]
gk$GO[[1]]
write.xlsx(NULL, file = "temp", sheetIndex = 1)
?write.xlsx
write.xlsx(NULL, file = "temp", sheetName = 1)
write.xlsx(NULL, file = "temp.xlsx", sheetName = 1)
write.xlsx("1", file = "temp.xlsx", sheetName = 1)
write.xlsx("1", file = "temp.xlsx", sheetName = "1")
write.xlsx(gk$KEGG, file = "temp.xlsx", sheetName = "KEGG", append = T)
names(gk$GO)
write.xlsx(gk$GO$BP, file = "temp.xlsx", sheetName = "BP", append = T)
write.xlsx(gk$GO$MF, file = "temp.xlsx", sheetName = "MF", append = T)
write.xlsx(gk$GO$CC, file = "temp.xlsx", sheetName = "CC", append = T)
geneList
write.xlsx(geneList, file = "temp.xlsx", sheetName = "genes", append = T)
Bin1 = tpmAll[grep("^B", names(tpmAll))]
yy = Bin1[geneList, ]
head(yy)
yy$Bin1-6962 = NULL
yy$"Bin1-6962" = NULL
head(yy)
yy = cbind(yy, rowMeans(yy[grep("Bin1", names(yy)), ]))
names(yy)
Bin1 = Bin1[rowMax(as.matrix(Bin1)) > 10, ]
grep("Bin1", names(yy))
yy = cbind(yy, rowMeans(yy[, grep("Bin1", names(yy))]))
head(yy)
yy = Bin1[geneList, ]
yy$"Bin1-6962" = NULL
yy = cbind(yy, Bin1_avg = rowMeans(yy[, grep("Bin1", names(yy))]))
head(yy)
yy = cbind(yy, B6_avg = rowMeans(yy[, grep("B6", names(yy))]))
head(yy)
yy$log2fc = log2(yy$Bin1_avg + 1) - log2(yy$B6_avg + 1)
head(yy)
yy$fit.pv = fit.pv[geneList, "grp2Bin1"]
head(yy)
write.xlsx(yy, file = "temp.xlsx", sheetName = "new", append = T)
head(yy, n = 15)
geneList[1:20]
tpmAll["4930506C21Rik", ]
Bin1 = tpmAll[grep("^B", names(tpmAll))]
Bin1["4930506C21Rik", ]
yy = Bin1[geneList, ]
head(yy)
yy$"Bin1-6962" = NULL
yy = cbind(yy, B6_avg = rowMeans(yy[, grep("B6", names(yy))]))
yy = cbind(yy, Bin1_avg = rowMeans(yy[, grep("Bin1", names(yy))]))
head(yy)
head(yy, n = 20)
yy$log2fc = log2(yy$Bin1_avg + 1) - log2(yy$B6_avg + 1)
head(yy, n = 20)
head(fit.pv)
head(fit.pv, n = 20)
yy2 = yy
yy2$fit.pv = fit.pv[geneList, "grp2Bin1"]
head(fit.pv, n = 20)
head(yy2)
head(yy2, n = 20)
write.xlsx(yy2, file = "temp.xlsx", sheetName = "new_2", append = T)
