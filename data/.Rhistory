pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off()
cor(abs(gwas$mean), gwas$MAF)
cor(abs(gwas$mean), gwas$P)
cor(MAF, gwas$P)
cor(gwas$MAF, gwas$P)
ggplot(gwas, aes(x = P, y = mean, colour = sign, size = -log10(P)))
ggplot(gwas, aes(x = -log10(P), y = mean, colour = sign, size = -log10(P)))
ggplot(gwas, aes(x = -log10(P), y = mean, colour = sign)) + geom_point()
gwas <- filter(gwas, P < 1e-5)
library(dplyr)
gwas = cbind(meta, fit[meta$UID, ])
gwas <- filter(gwas, P < 1e-5)
head(gwas)
head(vep)
vep_p <- filter(vep, X.Uploaded_variation %in% gwas$UID)
head(vep_p)
table(vep_p$Consequence)
vep_p[vep_p$Consequence == "missense_variant", ]
gwas = cbind(meta, fit[meta$UID, ])
gwas <- filter(gwas, P < 1e-4)
vep_p <- filter(vep, X.Uploaded_variation %in% gwas$UID)
table(vep_p$Consequence)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas_p[1, ]; group_idx <- 1
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
head(gwas)
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas_p$CHR[i] == gwas_p$CHR[i-1]
position = gwas_p$POS[i] - gwas_p$POS[i-1] < 1e6
other = abs(gwas_p$mean[i] - gwas_p$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas_p[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas_p[i, ]
}
}
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x))
group <- do.call(rbind, group)
head(group)
unique(group$PEAK)
as.character(unique(group$PEAK))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
head(vep_p)
names(vep_p)
names(vep_p) = gsub("X.Uploaded_variation", "UID", names(vep_p))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
head(gwasTable)
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
head(gwasTable)
gwasTable <- gwasTable[-1]
head(gwasTable)
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
pchisq(15, df = 1, lower.tail = F)
head(vep_p)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F)
head(so)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F)
head(so)
so <- gsub(" ", "", so$SO.term)
so$SO.term
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F)
head(so)
so$SO.term
so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sapply(vep_p, function (x) sum(x[grep(y, names(x))])))
names(vep_p)
cons <- sapply(so, function(y) sapply(table(vep_p), function (x) sum(x[grep(y, names(x))])))
table(vep_p)
cons <- sapply(so, function(y) sapply(table(vep_p$Consequence), function (x) sum(x[grep(y, names(x))])))
cons
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence)))
cons <- cons[! cons == 0]
cons
sort(cons / sum(cons), decreasing = T)
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 12, height = 8)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 1.5e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 5e1, labels = cons)
dev.off()
cons
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 12, height = 8)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e2, labels = cons)
dev.off()
missense
unique(missense$UID)
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e2, labels = cons)
dev.off()
rm(list = ls())
load("~/Dropbox/GitHub/glmm/data/mcmc.rdt")
fit = as.data.frame(mcmc$mcmc); meta = mcmc$meta; vep = mcmc$vep
names(vep) = gsub("X.Uploaded_variation", "UID", names(vep))
fit$P = pnorm(abs(fit$mean), sd = fit$sd, lower.tail = F) * 2
fit$sign <- as.factor(sign(fit$mean))
gwas = cbind(meta, fit[meta$UID, ])
head(gwas)
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
head(gwas)
gwas[which.min(gwas$P), ]
gwas <- filter(gwas, P < 1e-4)
gwas5 <- filter(gwas, P < 1e-5)
gwas6 <- filter(gwas, P < 1e-6)
gwas7 <- filter(gwas, P < 1e-7)
gwas7
gwas6
gwas6$MAF
gwas = cbind(meta, fit[meta$UID, ])
gwas4 <- filter(gwas, P < 1e-4)
gwas5 <- filter(gwas, P < 1e-5)
gwas6 <- filter(gwas, P < 1e-6)
gwas7 <- filter(gwas, P < 1e-7)
gwas = gwas4
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
length(group)
as.character(unique(group$PEAK))
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
vep_p[vep_p$Consequence == "missense_variant", ]
gwas6 <- filter(gwas, P < 1e-6)
gwas = gwas6
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
gwas = gwas7
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
gwas = gwas4
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off() # annotations???
head(gwas)
table(gwas$sign)
1418 / 1603
cor(gwas$MAF, abs(gwas$mean))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off() # annotations???
table(gwas$sign)
239 / 246
cor(gwas$MAF, abs(gwas$mean))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e2, labels = cons)
dev.off()
vep_p[vep_p$Consequence == "missense_variant", ]
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 1e1, labels = cons)
dev.off()
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 5e1, labels = cons)
dev.off()
pdf("~/Dropbox/GitHub/glmm/Manu/cons.pdf", width = 10, height = 6)
op <- par(mar = c(5, 20, 4, 3))
bar <- barplot(cons, xlim = c(0, max(cons) + 2e2),
axes = F, border = NA, horiz = T, las = 1, space = 0.75)
abline(v = 0, lwd = 1, col = "black")
text(y = bar, x = cons + 3e1, labels = cons)
dev.off()
gwas = gwas4
pdf("~/Dropbox/GitHub/glmm/Manu/glmm.pdf", width = 6, height = 4, family = "Helvetica")
ggplot(gwas, aes(x = MAF, y = mean, colour = sign, size = -log10(P))) +
geom_point(shape = 111, alpha = 0.7) + scale_size(range = c(1, 5)) +
theme_bw() + xlab("MAF") + ylab("Effect") + guides(color = F, text = F) +
scale_color_manual(values = c("dodgerblue3", "firebrick1")) +
theme(axis.line = element_line(size = .5), legend.key = element_blank())
dev.off() # annotations???
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
sum(cons)
vep_p[vep_p$Consequence == "missense_variant", ]
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
head(vep_p)
vep_p$Distance
y = vep_p$Distance
y = y[! y == "-"]
y
cons
sort(cons / sum(cons), decreasing = T)
upstream <- filter(gwasTable, grepl("upstream", Consequence))
unique(upstream$UID)
vep_p[vep_p$UID %in% unique(upstream$UID), ]
y = vep_p[vep_p$UID %in% unique(upstream$UID), ]
y
y$Consequences
y$Consequence
sort(cons / sum(cons), decreasing = T)
sort(cons)
gwas = gwas4
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
unique(missense$UID)
gwas = gwas5
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
as.character(unique(group$PEAK))
vep_p <- filter(vep, UID %in% gwas$UID)
table(vep_p$Consequence)
so <- read.delim("~/Dropbox/GitHub/X/so.txt", stringsAsFactors = F); so <- gsub(" ", "", so$SO.term)
cons <- sapply(so, function(y) sum(grepl(y, vep_p$Consequence))); cons <- cons[! cons == 0]
sort(cons / sum(cons), decreasing = T)
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
intron <- filter(gwasTable, grepl("intron_variant", Consequence))
(intron_gene <- intron$Symbol %>% unique)
source("~/Dropbox/GitHub/X/function.R")
intron_gene_gk <- hsGK(intron_gene)
unique(intron$UID)
nrow(intron)
intron_gene
intron_gene_gk
options(stringsAsFactors = F)
gwascat <- read.delim("~/Dropbox/GitHub/glmm/GWAS_catelog/gwas_catalog_v1.0-downloaded_2015-07-22.tsv")
names(gwascat)
table(gwascat$DISEASE.TRAIT) %>% sort %>% tail
gwas_genes <- gwas$MAPPED_GENE %>% unique
gwas_genes
gwas_genes <- gwascat$MAPPED_GENE %>% unique
gwas_genes
gwas_genes <- lapply(gwas_genes, function(x) unlist(strsplit(x, ", ")))
gwas_genes <- lapply(gwas_genes, function(x) unlist(strsplit(x, " - ")))
gwas_genes <- unlist(gwas_genes) %>% unique
gwas_genes
(x = intersect(intron_genes, gwas_genes))
intron_genes
(x = intersect(intron_gene, gwas_genes))
y = lapply(gwas$MAPPED_GENE, function(x) unlist(strsplit(x, ", ")))
y = lapply(y, function(i) unlist(strsplit(i, " - ")))
idx = sapply(y, function(i) any(i %in% x))
gwas_select = gwas[idx, ]
gwas_select = gwascat[idx, ]
idx
(x = intersect(intron_gene, gwas_genes))
y = lapply(gwascat$MAPPED_GENE, function(x) unlist(strsplit(x, ", ")))
y = lapply(y, function(i) unlist(strsplit(i, " - ")))
idx = sapply(y, function(i) any(i %in% x))
gwas_select = gwascat[idx, ]
gwas_select
table(gwas_select$CONTEXT)
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:20]
head(gwas_select)
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
intron_gene
gwas_select[grepl("Alzheimer's disease", gwas_select$DISEASE.TRAIT), ]
x
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("Triglycerides", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED.GENE")]
gwas_select[grepl("Triglycerides", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("Adiponectin levels", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED.GENE")]
gwas_select[grepl("Adiponectin levels", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
gwas_select[grepl("Alzheimer's disease", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("IgG glycosylation", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
gwas_select[grepl("Type 2 diabetes", gwas_select$DISEASE.TRAIT), c("DISEASE.TRAIT", "MAPPED_GENE")]
table(gwas_select$CONTEXT)
cons
sort(cons)
head(gwas)
gwasTable
gwasTable[which.min(gwasTable$P), ]
gwas = gwas4
vep_p <- filter(vep, UID %in% gwas$UID)
vep_p[vep_p$Consequence == "missense_variant", ]
group <- list(); group[[1]] <- gwas[1, ]; group_idx <- 1
for (i in 2:nrow(gwas)) {
chromosome = gwas$CHR[i] == gwas$CHR[i-1]
position = gwas$POS[i] - gwas$POS[i-1] < 1e6
other = abs(gwas$mean[i] - gwas$mean[i-1]) < 1
if ( all(chromosome, position, other) )
group[[group_idx]] = rbind(group[[group_idx]], gwas[i, ])
else {
group_idx = group_idx + 1
group[[group_idx]] = gwas[i, ]
}
}
group <- do.call(rbind, lapply(group, function(x) cbind(PEAK = x$UID[which.min(x$P)], x)))
gwasTable <- cbind(vep_p, group[match(vep_p$UID, group$UID), ])
gwasTable <- gwasTable[-1]
missense <- filter(gwasTable, grepl("missense_variant", Consequence))
missense
gwas_genes
"LRRC8E" %in% gwas_genes
"NANOS1" %in% gwas_genes
"ZNF684" %in% gwas_genes
"GKN1" %in% gwas_genes
gwas_select[grepl("cholesterol", gwas_select$DISEASE.TRAIT), ]
sort(table(gwas_select$DISEASE.TRAIT), decreasing = T)[1:10]
15912120 * 4
library(biomaRt)
mart = useMart("ensembl", dataset = "mmusculus_gene_ensembl")
setwd("~/Dropbox/GitHub/App")
dir()
setwd("data")
dir()
load("data1314.rdt")
load(brain2014.rdt)
load("brain2014.rdt")
load("brain2014new.rdt")
load("data14new.rdt")
head("brain2014.tpm")
ls()
dim(brain2014.tpm)
head(brain2014.tpm)
hist(brain2014.tpm)
hist(brain2014.tpm[, 1])
hist(brain2014.tpm[, 2])
dir()
rm(list = ls())
load("data14new.rdt")
rm(list = ls())
load("brain2014.rdt")
rm(list = ls())
load("data1314.rdt")
